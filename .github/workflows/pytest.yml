# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: pytest

on:
  workflow_dispatch:
  push:
    branches: 
      - main
      - master
  pull_request:
    branches: 
      - main
      - master

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 1
          
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          # Remove the pip cache configuration since we're using uv
          # cache: 'pip'

      # Add a dedicated cache step for uv
      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Create and activate a virtual environment
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv venv .venv
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo "$PWD/.venv/bin" >> $GITHUB_PATH
          
      - name: Install dependencies
        run: |
          uv pip install --upgrade pip
          uv pip install flake8 pytest
          if [ -f requirements-dev.txt ]; then uv pip install -r requirements-dev.txt; fi
          
      - name: Run tests
        run: |
          export PYTHONPATH=$PWD/src:$PYTHONPATH
          cd $GITHUB_WORKSPACE
          pytest ./ -v

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: |
            .pytest_cache
            test-results
          retention-days: 30
          compression-level: 6
